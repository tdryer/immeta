(function() {var implementors = {};
implementors['byteorder'] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='byteorder/enum.Error.html' title='byteorder::Error'>Error</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='byteorder/enum.Error.html' title='byteorder::Error'>Error</a>&gt; for <a class='struct' href='https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>",];implementors['immeta'] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='immeta/enum.Error.html' title='immeta::Error'>Error</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='byteorder/new/enum.Error.html' title='byteorder::new::Error'>Error</a>&gt; for <a class='enum' href='immeta/enum.Error.html' title='immeta::Error'>Error</a>","impl&lt;T: <a class='trait' href='num/traits/trait.ToPrimitive.html' title='num::traits::ToPrimitive'>ToPrimitive</a>, U: <a class='trait' href='num/traits/trait.ToPrimitive.html' title='num::traits::ToPrimitive'>ToPrimitive</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a href='https://doc.rust-lang.org/nightly/std/primitive.tuple.html'>(T, U)</a>&gt; for <a class='struct' href='immeta/struct.Dimensions.html' title='immeta::Dimensions'>Dimensions</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
